# JS tooling
Gert Hengeveld<br >
Ruben Oostinga

https://twitter.com/GHengeveld
https://twitter.com/rubenoostinga

![Logo Xebia](img/logo-xebia.png)

---

### Introduce yourself

- What is your name?
- What is your current front-end experience?
- What do you want to get out of this course?

---

### Concepts to understand

- JS bundles
- Minification
- JS dependencies
- Modules

Note:
- JS bundle:
  - Concatenation of JS files
  - Faster to load than separate files
- Minification:
  - Shortens all variables names
  - Removes whitespace
  - Other optimizes for minimal filesize
  - Goal: load fast in browser
- JS dependencies
  - You can put all javascript in a single file
  - Too big -> split it up
  - Split up files need to run in a specific order
  - Code depends on other code
  - Example:
    - Angular module declaration should run before you add controllers / directives to that angular module
- Modules:
  - JS file with private scope
  - By default vars declarations are global
  - Wrapping code in a function makes it a module
  - Immediately-Invoked Function Expression (IIFE)

vvv

### Immediately-Invoked Function Expression (IIFE)
``` javascript
var counter = (function(){
  var i = 0;
  return {
    get: function(){
      return i;
    },
    set: function( val ){
      i = val;
    },
    increment: function() {
      return ++i;
    }
  };
}());
```

Note:
- Example of a classic JS module
- There are others:
  - AMD
  - CommonJS: like NodeJS
  - ES6: JS standard modules
- Function is invoked immediately
- `var i` is locally scoped
- a public API is exposed:
  - `get`, `set`, `increment`
---


### What problem are we solving?

Note:
- Only solve problems you have
- Especially when you already have a working project
- There are too many cool new tools to use everything

---

### What problem are we solving?

- You want to bundle your javascript for performance
- There are dependencies between modules
- 

vvv

<style>
\#smallcode + p + pre {
  font-size: 5pt;
}
</style>
<div id="smallcode"></div>
``` html
<script src="/config-variables.js"></script>

<!-- build:js /scripts/common.js -->
<script src="/bower_components/jquery/dist/jquery.js"></script>
<script src="/bower_components/jquery-ui/ui/core.js"></script>
<script src="/bower_components/angular/angular.js"></script>
<script src="/bower_components/angular-i18n/angular-locale_nl-be.js"></script>
<script src="/bower_components/lodash/lodash.js"></script>
<script src="/bower_components/underscore.string/dist/underscore.string.js"></script>
<script src="/bower_components/angular-cookie/angular-cookie.js"></script>
<script src="/bower_components/angular-route/angular-route.js"></script>
<script src="/bower_components/angular-sanitize/angular-sanitize.js"></script>
<script src="/bower_components/angular-touch/angular-touch.js"></script>
<script src="/bower_components/angular-ui-bootstrap/src/pagination/pagination.js"></script>
<script src="/bower_components/angular-ui-bootstrap/src/bindHtml/bindHtml.js"></script>
<script src="/bower_components/angular-ui-bootstrap/src/position/position.js"></script>
<script src="/bower_components/angular-ui-bootstrap/src/typeahead/typeahead.js"></script>
<script src="/bower_components/angular-ui-bootstrap/src/modal/modal.js"></script>
<script src="/bower_components/angular-ui-bootstrap/src/transition/transition.js"></script>
<script src="/bower_components/angulartics/src/angulartics.js"></script>
<script src="/bower_components/matchMedia/matchMedia.js"></script>

<script src="/scripts/common/environment/environment-module.js"></script>
<script src="/scripts/common/environment/environment-constants.js"></script>
<script src="/scripts/common/environment/culture-filter.js"></script>
<script src="/scripts/common/environment/currency-filter.js"></script>

<script src="/scripts/common/analytics/analytics-module.js"></script>
<script src="/scripts/common/analytics/tealium-script-service.js"></script>
<script src="/scripts/common/analytics/divolte-script-service.js"></script>
<script src="/scripts/common/analytics/async-script-service.js"></script>
<script src="/scripts/common/analytics/cookie-service.js"></script>
<script src="/scripts/common/analytics/iframe-service.js"></script>
<script src="/scripts/common/analytics/angulartics-config-provider.js"></script>
<script src="/scripts/common/analytics/tealium-analytics-provider.js"></script>
<script src="/scripts/common/analytics/criteo-analytics-provider.js"></script>
<script src="/scripts/common/analytics/google-analytics-provider.js"></script>
<script src="/scripts/common/analytics/divolte-analytics-provider.js"></script>
<script src="/scripts/common/analytics/facebook-analytics-provider.js"></script>
<script src="/scripts/common/analytics/floodlight-analytics-provider.js"></script>
<script src="/scripts/common/analytics/angulartics-debug.js"></script>
<script src="/scripts/common/analytics/domain/product.js"></script>
<script src="/scripts/common/analytics/domain/product-variant.js"></script>
<script src="/scripts/common/analytics/domain/order.js"></script>
<script src="/scripts/common/analytics/domain/order-line.js"></script>
<script src="/scripts/common/analytics/analytics-constants.js"></script>

<script src="/scripts/common/newsletter/newsletter-module.js"></script>
<script src="/scripts/common/newsletter/newsletter-service.js"></script>
<script src="/scripts/common/newsletter/newsletter-controller.js"></script>

<script src="/scripts/common/search-bar/search-bar-module.js"></script>
<script src="/scripts/common/search-bar/search-bar-typeahead-directive.js"></script>
<script src="/scripts/common/search-bar/search-bar-typeahead-service.js"></script>

<script src="/scripts/common/search-page/search-page-module.js"></script>
<script src="/scripts/common/search-page/search-service.js"></script>
<script src="/scripts/common/search-page/search-page-url-service.js"></script>
<script src="/scripts/common/search-page/search-page-location-service.js"></script>
<script src="/scripts/common/search-page/search-page-pagination-directive.js"></script>
<script src="/scripts/common/search-page/category-filter-controller.js"></script>
<script src="/scripts/common/search-page/facet-controller.js"></script>
<script src="/scripts/common/search-page/filter-feedback-directive.js"></script>
<script src="/scripts/common/search-page/price-filter-directive.js"></script>
<script src="/scripts/common/search-page/product-list-directive.js"></script>
<script src="/scripts/common/search-page/sorting-dropdown-directive.js"></script>
<script src="/scripts/common/search-page/natural-sorting-service.js"></script>
<script src="/scripts/common/search-page/price-directive.js"></script>
<script src="/scripts/common/search-page/search-page-pagination-link-directive.js"></script>

<script src="/scripts/common/common-module.js"></script>
<script src="/scripts/common/amplience-area-directive.js"></script>
<script src="/scripts/common/accordion-directive.js"></script>
<script src="/scripts/common/api-http-request-interceptor.js"></script>
<script src="/scripts/common/back-button-directive.js"></script>
<script src="/scripts/common/basket-service.js"></script>
<script src="/scripts/common/collapsible-directive.js"></script>
<script src="/scripts/common/content-repository-service.js"></script>
<script src="/scripts/common/cookie-controller.js"></script>
<script src="/scripts/common/nl-user-controller.js"></script>
<script src="/scripts/common/nl-user-modal-controller.js"></script>
<script src="/scripts/common/current-year-directive.js"></script>
<script src="/scripts/common/date-filter.js"></script>
<script src="/scripts/common/form-autofill-directive.js"></script>
<script src="/scripts/common/form-field-validation-directive.js"></script>
<script src="/scripts/common/form-submit.js"></script>
<script src="/scripts/common/global-error-service.js"></script>
<script src="/scripts/common/header-directive.js"></script>
<script src="/scripts/common/input-validation-directive.js"></script>
<script src="/scripts/common/ip-location-service.js"></script>
<script src="/scripts/common/mini-basket-directive.js"></script>
<script src="/scripts/common/mobile-menu-directive.js"></script>
<script src="/scripts/common/nav-set-active-directive.js"></script>
<script src="/scripts/common/object-dimension-service.js"></script>
<script src="/scripts/common/options-disabled-directive.js"></script>
<script src="/scripts/common/product-filter.js"></script>
<script src="/scripts/common/responsive-image-directive.js"></script>
<script src="/scripts/common/scrollto-directive.js"></script>
<script src="/scripts/common/select-update-wrapper-directive.js"></script>
<script src="/scripts/common/trusted-url-filter.js"></script>
<script src="/scripts/common/validation-service.js"></script>
<script src="/scripts/common/product-image-directive.js"></script>
<script src="/scripts/common/scroll-to-top-directive.js"></script>
<script src="/scripts/common/category-toggle-view-directive.js"></script>
```

---

### Comparison to various tools

- Task runners
  - Grunt
  - Gulp
Module loaders / bundlers
  - RequireJS
  - browserify
  - jspm
  - rollup.js

Note:
- Give a history of where these tools come from
- Compare their features

---

### Grunt: The JavaScript task runner
- Runs tasks sequentially
- Writes intermediate files to disk

![Logo grunt](img/grunt-logo.png)

Note:
- Which tasks can it do?
  - Call a transpiler
  - Concatenate files
  - Call a minifier
- Lots of configuration
- Task declaration separate from task configuration
- Writing to disk can get slow
- But it works, we are still using it at wehkamp
- Does not understand dependencies
  - Only understands filesystem

---

### Gulp: The streaming build system

- Define tasks ask streams
- Don't write to disk for intermediate results
- Tasks run parallel

![Logo gulp](img/logo-gulp.png)

Note:
- The configuration is easier to read
- Runs faster due to:
  - parallelization
  - not writing to disk
- Still a task runner
  - Does not understand dependencies
    - Only understands filesystem

---

### RequireJS: A JS module loader

- Declare dependencies per module instead of a list of scripts
- Loads dependencies via XHR requests in the browser
- Only supports Asynchronous Module Definition (AMD)
- Bundle files in build step
- Can be used on NodeJS as well

![Logo RequireJS](img/logo-requirejs.png)

Note:

- One of the first module loaders
  - Started in 2009
  - Based on the dojo toolkit loader
- Module loaders are different from task runners
- Understand JS dependencies
- No list of scripts with implicit dependencies
  - Like angular module example

vvv

### Asynchronous Module Definition (AMD)

``` javascript
define(['jquery'] , function ($) {
  return function () {};
});
```

Note:
- Similar to NG DI
- Dependencies in array
- Function invoked with instances

---

### Browserify: Run NodeJS modules in the browser

- Bundles files
- Plugins which only do one thing
  - babelify
  - css-modulesify
- Configuration in package.json
- Shims for browser versions of NodeJS core libaries

![Logo browserify](img/logo-browserify.png)

Note:
- NodeJS modules are CommonJS modules
- Files with require calls
- Browserify is focussed
  - Easy configuration
  - Only do one thing: Unix philosophy
- Shimmed core libs:
  - http
  - crypto
  - path
- Used by react itself

---

### JSPM: frictionless browser package management

- Package manager which uses the SystemJS module loader
- Loads modules from the browser just like RequireJS
- Runs transpilation in the browser
- Has CLI tool that automates configuration

![Logo jspm](img/logo-jspm.png)

Note:
- New project
  - Is it ready yet?
- Package manager means:
 - Calls NPM, bower or git
 - Has a registry of what to call when
- SystemJS universal loader:
  - Like RequireJS in the browser
  - AMD, commonjs and es6 modules
  - supports transpilation
- All error in browser
- Easy to set up with cli
- Slow for big projects
  - HTTP2 will improve
  - JSPM server is beta
- Standard for Angular 2

---

### Rollup.js: The next-generation JavaScript module bundler
- Dead code elimination for ES2015 modules via tree shaking
- Plugin to convert CommonJS to ES2015

Note:
- Goal is a small bundle
- New project

### Webpack: The flexible module bundle

![What is webpack](img/what-is-webpack.png)

---

### Webpack: The flexible module bundle

- Most powerful tool
- Both module bundler / loader
- Webpack itself does many things
- Extensible with plugins / loaders
- Works with all resources
- Powerful bundle splitting
- Development server for incremental compilation

Note:
- Configuration takes some getting used to
- Some say its difficult to learn
- Easier to configure than Grunt
- When making a dev / production build and run on server / client can get confusing
- Dev server:
  - Only load the changed files
  - Quicker than including everything always

---

### Getting started with webpack

```
mkdir training-webpack
cd training-webpack
npm init -y
npm install --save-dev webpack
npm install --save-dev http-server
```

vvv

### Getting started with webpack

index.html
``` html
<html>
  <head>
    <title>Hello Webpack</title>
  </head>
  <body>
    <div id="app"></div>
    <script src="bundle.js"></script>
  </body>
</html>
```

vvv

### Getting started with webpack

index.js
``` javascript
var render = require('./render.js');

document.getElementById('app').innerHTML = render();
```

render.js
``` javascript
module.exports = function () {
  var heading = '<h1>Hello from renderer</h1>';
  var paragraph = '<p>This is a paragraph</p>';
  return heading + paragraph;
}
```

vvv

### Running the code

```sh
# makes locally install npm packages available on $PATH
export PATH=./node_modules/.bin:$PATH

# serves the current directory
nws -o

# generates bundle.js on file change
webpack index.js bundle.js --watch

# or minified build
webpack index.js bundle.js --watch --optimize-minimize
```

vvv

### Things to try

- Edit a JS file and reload
- Look at the contents of bundle.js
- Import a module from npm like jQuery / lodash

``` javascript
var $ = require('jquery');
var _template = require('lodash/template');
```

---

### Basic configuration

webpack.config.js
``` javascript
module.exports = {
    entry: "./index.js",
    output: {
        path: __dirname,
        filename: "bundle.js"
    },
    module: {
        loaders: [
            { test: /\.css$/, loader: "style!css" }
        ]
    }
};
```

Note:
- Entry is the root of dependency graph
- Loaders define a pipeline
- Loads right to left, just like JS functions
  - `styleLoader(cssLoader(css))`
- test is a regex on the full filename of resources
- Css-loader:
  - interpret url / @import declarations
  - minify css
  - css modules
- Style-loader:
  - Keeps the css in JS
  - Puts the output of css-loader in script tag
  - Ensures hot module replacement works for css
  - You might not want this in production

vvv

### Add some css to our webpack project

```
npm i --save-dev css-loader style-loader
```

index.css
``` css
body {
  margin: 40px auto;
  max-width: 650px;
  line-height: 1.6;
  font-size: 18px;
  color: #444;
  padding: 0 10px;
}
```

render.css
``` css
.render__heading {
  line-height:1.2;
}
```

Note:
- Only an example

vvv

### Import your css in JS

``` javascript
// in index.js
require('index.css');

// in render.js
require('render.css');
```

Note:

- Again look at your bundle.js
- Style-loader add a lot of JS

---

### Hot module replacement
- Replaces modules without reloading
- Only works when there is no state
- Send new versions over websockets

Note:

- Gives you fast feedback
- Doesn't wipe out app state like
  - form fields
  - opened modals
- Works well with React not so well with Angular
  - However with some discipline you can make it work for both
- Css has no state

vvv

### Trying out HMR
- add an input box in render.js

``` sh
npm install --save-dev webpack-dev-server
webpack-dev-server --hot --inline
```

- Browse to `http://localhost:8080`
- Now edit some css files

---

### Webpack validator

- Webpack doesn't validate its config
- This results in confusing errors
- `webpack-validator` adds much better error messages

Note:
- works with runtime type checking
- add smarter rules as well
- is extensible
- Note: extend schema if non-standard config
- Both cli and in config

vvv

### Add webpack-validator to you config

``` sh
npm i --save-dev webpack-validator
```

``` javascript
var validate = require('webpack-validator');
module.exports = validate({ /* ... your webpack config */ });
```

- Try changing `loader` to `loaders`

---

### Babel: Use next generation JS today

- Transpilation: Convert new JS to old JS
- Plugins for:
  - es2015
  - React
  - EcmaScript proposals
- Can transpile in memory with `babel-register`
- Requires polyfills for library features like
  - New Object, Array methods
  - Promise, Set, Map


Note:

vvv

### Compatibility table

- https://kangax.github.io/compat-table/es6/

Note:
- Chrome caught up
- Can't transpile everything
- IE11 doesn't have any es6 features

vvv

### Babel in production
- Don't run in `babel-register` on production server
- Use the babel runtime to avoid duplication of some boilerplate
- Be careful with the babel-polyfill it is bigger than jQuery

Note:
- When running JS server-side
- Babel generates helper methods, runtime avoid duplication
- polyfill is big, use specific features from core-js

---

### Adding babel loader

- Enable transpiling es2015 to es5
- Don't run for `node_modules`
- Write webpack config in es2015

vvv

### Adding babel loader


``` sh
npm i --save-dev babel-loader babel-core babel-preset-stage-2\
babel-preset-es2015
```

``` javascript
// Add to loaders in webpack config
{
  test: /\.js$/,
  exclude: /node_modules/,
  loader: 'babel'
},
```
.babelrc

``` json
{
  "presets": ["es2015", "stage-2"]
}
```

Note:

- Could configure babel in webpack config
- Using .babelrc for babel-register webpack.config.js

vvv

### webpack.config.js in es2015

``` sh
mv webpack.config.js webpack.config.babel.js
```

webpack.config.js
``` javascript
require('babel-core/register');

module.exports = require('./webpack.config.babel.js');
```

- Use es2015 features in `webpack.config.babel.js`

Note:
- es2015 like imports
- export default

---

### Make a production build

- Minify your javascript
- Extract css file
- Use hashes for cache busting

vvv


